import { Container } from "inversify";
import DefaultChallengeCatalogService, { ChallengeCatalogService } from "../../services/ChallengeCatalogService";
import DefaultHttpService, { HttpService } from "../../services/HttpService";
import AuthStore from "../../oidc/AuthStore";
import ChallengesStore from "../../stores/states/ChallengesStore";
import ChallengeStore from "../../stores/states/ChallengeStore";
import iocServices from "./iocServices";
import iocStores from "./iocStores";
import DefaultAuthenticationService, { AuthenticationService } from "../../oidc/AuthenticationService";
import DefaultLocalStorageService, { LocalStorageService } from "../../services/LocalStorageService";
import UserRoleStore from "../../stores/global/UserRoleStore";
import DefaultStreamerService, { StreamerService } from "../../services/StreamerService";
import StreamerProfileStore from "../../stores/components/StreamerProfileStore";
import DonaterStore from "../../stores/DonaterStore";
import StreamersStore from "../../stores/states/StreamersStore";
import ChallengeOrderStore from "../../stores/containers/ChallengeOrderStore";
import DefaultChallengesTempStorageService, { ChallengesTempStorageService } from "../../services/ChallengesTempStorageService";
import ChallengesTempStorageStore from "../../stores/global/ChallengesTempStorageStore";
import DefaultPaymentService, { PaymentService } from "../../services/PaymentService";
import ChallengesBoardPaginationStore from "../../stores/components/ChallengesBoardPaginationStore";
import ChallengesBoardFiltersStore from "../../stores/components/ChallengesBoardFiltersStore";
import ChallengesBoardStore from "../../stores/containers/ChallengesBoardStore";
import ChallengeForAddingStore from "../../stores/states/ChallengeForAddingStore";
import DefaultCommentService, { CommentService } from "../../services/CommentService";
import CommentsStore from "../../stores/states/CommentsStore";
import CommentPaginationStore from "../../stores/components/CommentPaginationStore";
import DefaultUserService, { UserService } from "../../services/UserService";
import DateTimeStore from "../../stores/components/DateTimeStore";
import CommentsBlockStore from "../../stores/containers/CommentsBlockStore";
import CommentStore from "../../stores/states/CommentStore";

export const container = new Container();
container.bind<HttpService>(iocServices.httpService).to(DefaultHttpService).inSingletonScope();
container.bind<ChallengeCatalogService>(iocServices.challengeCatalogService).to(DefaultChallengeCatalogService).inTransientScope();
container.bind<AuthenticationService>(iocServices.authenticationService).to(DefaultAuthenticationService).inSingletonScope();
container.bind<LocalStorageService>(iocServices.localStorageService).to(DefaultLocalStorageService).inTransientScope();
container.bind<StreamerService>(iocServices.streamerService).to(DefaultStreamerService).inTransientScope();
container.bind<ChallengesTempStorageService>(iocServices.challengesTempStorageService).to(DefaultChallengesTempStorageService).inTransientScope();
container.bind<PaymentService>(iocServices.paymentService).to(DefaultPaymentService).inTransientScope();
container.bind<CommentService>(iocServices.commentService).to(DefaultCommentService).inTransientScope();
container.bind<UserService>(iocServices.userService).to(DefaultUserService).inTransientScope();

container.bind<ChallengesStore>(iocStores.challengesStore).to(ChallengesStore).inSingletonScope();
container.bind<ChallengeStore>(iocStores.challengeStore).to(ChallengeStore).inSingletonScope();
container.bind<AuthStore>(iocStores.authStore).to(AuthStore).inSingletonScope();
container.bind<UserRoleStore>(iocStores.userRoleStore).to(UserRoleStore).inTransientScope();
container.bind<StreamerProfileStore>(iocStores.streamerProfileStore).to(StreamerProfileStore).inSingletonScope();
container.bind<DonaterStore>(iocStores.donaterStore).to(DonaterStore).inTransientScope();
container.bind<StreamersStore>(iocStores.streamersStore).to(StreamersStore).inSingletonScope();
container.bind<ChallengeOrderStore>(iocStores.challengeOrderStore).to(ChallengeOrderStore).inSingletonScope();
container.bind<ChallengesTempStorageStore>(iocStores.challengesTempStorageStore).to(ChallengesTempStorageStore).inSingletonScope();
container.bind<ChallengesBoardPaginationStore>(iocStores.challengesBoardPaginationStore).to(ChallengesBoardPaginationStore).inSingletonScope();
container.bind<ChallengesBoardFiltersStore>(iocStores.challengesBoardFiltersStore).to(ChallengesBoardFiltersStore).inSingletonScope();
container.bind<ChallengesBoardStore>(iocStores.challengesBoardStore).to(ChallengesBoardStore).inSingletonScope();
container.bind<ChallengeForAddingStore>(iocStores.challengeForAddingStore).to(ChallengeForAddingStore).inSingletonScope();
container.bind<CommentPaginationStore>(iocStores.commentPaginationStore).to(CommentPaginationStore).inSingletonScope();
container.bind<CommentsStore>(iocStores.commentsStore).to(CommentsStore).inSingletonScope();
container.bind<DateTimeStore>(iocStores.dateTimeStore).to(DateTimeStore).inTransientScope();
container.bind<CommentsBlockStore>(iocStores.commentsBlockStore).to(CommentsBlockStore).inSingletonScope();
container.bind<CommentStore>(iocStores.commentStore).to(CommentStore).inSingletonScope();